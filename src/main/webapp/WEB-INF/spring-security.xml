<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans.xsd
		   http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

<!--    <http pattern="/register" security="none"/>
    <http pattern="/login" security="none"/>
    <http pattern="/order**" security="none"/>-->
    <!--<http pattern="/" security="none"/>-->

    <global-method-security pre-post-annotations="enabled"/>

    <http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <csrf disabled="true"/>
        <access-denied-handler ref="myAccessDeniedHandler"/>

        <!--<intercept-url pattern="/auth" access="isAnonymous()"/>-->
        <!--<intercept-url pattern="/method" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/method/{var}" access="hasRole('ROLE_ADMINISTRATOR')"/>-->

        <intercept-url pattern="/user/history/{userId}" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <intercept-url pattern="/user/**" access="hasRole('ROLE_CUSTOMER')"/>

        <intercept-url pattern="/driver/history/{driverId}" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <intercept-url pattern="/driver/**" access="hasRole('ROLE_DRIVER')"/>

        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMINISTRATOR')"/>

        <custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
        <logout invalidate-session="true"
                logout-success-url="/"/>
    </http>

    <beans:bean id="myAccessDeniedHandler" class="com.teamd.taxi.authentication.SystemAccessDeniedHandler">
    </beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg value="/login"/>
    </beans:bean>

    <beans:bean id="authenticationFilter" class="com.teamd.taxi.authentication.SystemAuthenticationProcessingFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/checkLogin"/>
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="passwordParameter" value="password"/>
    </beans:bean>

    <beans:bean id="driverAuthenticationProvider"
                class="com.teamd.taxi.authentication.driver.DriverAuthenticationProvider">
        <beans:property name="userDetailsService">
            <beans:bean class="com.teamd.taxi.authentication.driver.DriverDetailsService"/>
        </beans:property>
        <beans:property name="passwordEncoder" ref="encoder"/>
    </beans:bean>

    <beans:bean id="userAuthenticationProvider" class="com.teamd.taxi.authentication.user.UserAuthenticationProvider">
        <beans:property name="userDetailsService">
            <beans:bean class="com.teamd.taxi.authentication.user.MyUserDetailsService"/>
        </beans:property>
        <beans:property name="passwordEncoder" ref="encoder"/>
    </beans:bean>


    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="driverAuthenticationProvider"/>
        <authentication-provider ref="userAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans:beans>